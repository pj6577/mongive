/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { GichoSwap, GichoSwapInterface } from "../../contracts/GichoSwap";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "ERC2612ExpiredSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC2612InvalidSigner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "currentNonce",
        type: "uint256",
      },
    ],
    name: "InvalidAccountNonce",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162001671380380620016718339810160408190526200003591620003a7565b60405180604001604052806007815260200166476963686f563360c81b81525080604051806040016040528060018152602001603160f81b81525060405180604001604052806007815260200166476963686f563360c81b8152506040518060400160405280600381526020016247433360e81b8152508160039081620000bd919062000480565b506004620000cc828262000480565b50620000de91508390506005620001b6565b61012052620000ef816006620001b6565b61014052815160208084019190912060e052815190820120610100524660a0526200017d60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c05250620001af816200019a6012600a6200065f565b620001a990620f424062000670565b620001ef565b5062000716565b6000602083511015620001d657620001ce8362000231565b9050620001e9565b81620001e3848262000480565b5060ff90505b92915050565b6001600160a01b0382166200021f5760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b6200022d6000838362000274565b5050565b600080829050601f815111156200025f578260405163305a27a960e01b81526004016200021691906200068a565b80516200026c82620006db565b179392505050565b6001600160a01b038316620002a357806002600082825462000297919062000700565b90915550620003179050565b6001600160a01b03831660009081526020819052604090205481811015620002f85760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640162000216565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620003355760028054829003905562000354565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200039a91815260200190565b60405180910390a3505050565b600060208284031215620003ba57600080fd5b81516001600160a01b0381168114620003d257600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200040457607f821691505b6020821081036200042557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200047b576000816000526020600020601f850160051c81016020861015620004565750805b601f850160051c820191505b81811015620004775782815560010162000462565b5050505b505050565b81516001600160401b038111156200049c576200049c620003d9565b620004b481620004ad8454620003ef565b846200042b565b602080601f831160018114620004ec5760008415620004d35750858301515b600019600386901b1c1916600185901b17855562000477565b600085815260208120601f198616915b828110156200051d57888601518255948401946001909101908401620004fc565b50858210156200053c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620005a35781600019048211156200058757620005876200054c565b808516156200059557918102915b93841c939080029062000567565b509250929050565b600082620005bc57506001620001e9565b81620005cb57506000620001e9565b8160018114620005e45760028114620005ef576200060f565b6001915050620001e9565b60ff8411156200060357620006036200054c565b50506001821b620001e9565b5060208310610133831016604e8410600b841016171562000634575081810a620001e9565b62000640838362000562565b80600019048211156200065757620006576200054c565b029392505050565b6000620003d260ff841683620005ab565b8082028115828204841417620001e957620001e96200054c565b60006020808352835180602085015260005b81811015620006ba578581018301518582016040015282016200069c565b506000604082860101526040601f19601f8301168501019250505092915050565b80516020808301519190811015620004255760001960209190910360031b1b16919050565b80820180821115620001e957620001e96200054c565b60805160a05160c05160e051610100516101205161014051610f006200077160003960006106ff015260006106d20152600061067a01526000610652015260006105ad015260006105d7015260006106010152610f006000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146101a8578063a9059cbb146101b0578063d505accf146101c3578063dd62ed3e146101d857600080fd5b806370a08231146101515780637ecebe001461017a57806384b0196e1461018d57600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a5780633644e51514610149575b600080fd5b6100dc610211565b6040516100e99190610c63565b60405180910390f35b610105610100366004610c99565b6102a3565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b610105610135366004610cc3565b6102bd565b604051601281526020016100e9565b6101196102e1565b61011961015f366004610cff565b6001600160a01b031660009081526020819052604090205490565b610119610188366004610cff565b6102f0565b61019561030e565b6040516100e99796959493929190610d1a565b6100dc610354565b6101056101be366004610c99565b610363565b6101d66101d1366004610db3565b610371565b005b6101196101e6366004610e26565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461022090610e59565b80601f016020809104026020016040519081016040528092919081815260200182805461024c90610e59565b80156102995780601f1061026e57610100808354040283529160200191610299565b820191906000526020600020905b81548152906001019060200180831161027c57829003601f168201915b5050505050905090565b6000336102b18185856104b0565b60019150505b92915050565b6000336102cb8582856104c2565b6102d6858585610541565b506001949350505050565b60006102eb6105a0565b905090565b6001600160a01b0381166000908152600760205260408120546102b7565b6000606080600080600060606103226106cb565b61032a6106f8565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60606004805461022090610e59565b6000336102b1818585610541565b8342111561039a5760405163313c898160e11b8152600481018590526024015b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886103e78c6001600160a01b0316600090815260076020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061044282610725565b9050600061045282878787610752565b9050896001600160a01b0316816001600160a01b031614610499576040516325c0072360e11b81526001600160a01b0380831660048301528b166024820152604401610391565b6104a48a8a8a6104b0565b50505050505050505050565b6104bd8383836001610780565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981101561053b578181101561052c57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610391565b61053b84848484036000610780565b50505050565b6001600160a01b03831661056b57604051634b637e8f60e11b815260006004820152602401610391565b6001600160a01b0382166105955760405163ec442f0560e01b815260006004820152602401610391565b6104bd838383610855565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156105f957507f000000000000000000000000000000000000000000000000000000000000000046145b1561062357507f000000000000000000000000000000000000000000000000000000000000000090565b6102eb604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60606102eb7f0000000000000000000000000000000000000000000000000000000000000000600561097f565b60606102eb7f0000000000000000000000000000000000000000000000000000000000000000600661097f565b60006102b76107326105a0565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060008061076488888888610a2a565b9250925092506107748282610af9565b50909695505050505050565b6001600160a01b0384166107aa5760405163e602df0560e01b815260006004820152602401610391565b6001600160a01b0383166107d457604051634a1406b160e11b815260006004820152602401610391565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561053b57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161084791815260200190565b60405180910390a350505050565b6001600160a01b0383166108805780600260008282546108759190610e93565b909155506108f29050565b6001600160a01b038316600090815260208190526040902054818110156108d35760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610391565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661090e5760028054829003905561092d565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161097291815260200190565b60405180910390a3505050565b606060ff83146109995761099283610bb6565b90506102b7565b8180546109a590610e59565b80601f01602080910402602001604051908101604052809291908181526020018280546109d190610e59565b8015610a1e5780601f106109f357610100808354040283529160200191610a1e565b820191906000526020600020905b815481529060010190602001808311610a0157829003601f168201915b505050505090506102b7565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610a655750600091506003905082610aef565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610ab9573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610ae557506000925060019150829050610aef565b9250600091508190505b9450945094915050565b6000826003811115610b0d57610b0d610eb4565b03610b16575050565b6001826003811115610b2a57610b2a610eb4565b03610b485760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115610b5c57610b5c610eb4565b03610b7d5760405163fce698f760e01b815260048101829052602401610391565b6003826003811115610b9157610b91610eb4565b03610bb2576040516335e2f38360e21b815260048101829052602401610391565b5050565b60606000610bc383610bf5565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600060ff8216601f8111156102b757604051632cd44ac360e21b815260040160405180910390fd5b6000815180845260005b81811015610c4357602081850181015186830182015201610c27565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610c766020830184610c1d565b9392505050565b80356001600160a01b0381168114610c9457600080fd5b919050565b60008060408385031215610cac57600080fd5b610cb583610c7d565b946020939093013593505050565b600080600060608486031215610cd857600080fd5b610ce184610c7d565b9250610cef60208501610c7d565b9150604084013590509250925092565b600060208284031215610d1157600080fd5b610c7682610c7d565b60ff60f81b881681526000602060e06020840152610d3b60e084018a610c1d565b8381036040850152610d4d818a610c1d565b606085018990526001600160a01b038816608086015260a0850187905284810360c08601528551808252602080880193509091019060005b81811015610da157835183529284019291840191600101610d85565b50909c9b505050505050505050505050565b600080600080600080600060e0888a031215610dce57600080fd5b610dd788610c7d565b9650610de560208901610c7d565b95506040880135945060608801359350608088013560ff81168114610e0957600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610e3957600080fd5b610e4283610c7d565b9150610e5060208401610c7d565b90509250929050565b600181811c90821680610e6d57607f821691505b602082108103610e8d57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102b757634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fdfea2646970667358221220085014fc7ffd3a8d42dfb7d2058673fe75d44ec8f90ef1958ab2b8e158f1a64e64736f6c63430008160033";

type GichoSwapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GichoSwapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GichoSwap__factory extends ContractFactory {
  constructor(...args: GichoSwapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    recipient: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(recipient, overrides || {});
  }
  override deploy(
    recipient: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(recipient, overrides || {}) as Promise<
      GichoSwap & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): GichoSwap__factory {
    return super.connect(runner) as GichoSwap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GichoSwapInterface {
    return new Interface(_abi) as GichoSwapInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): GichoSwap {
    return new Contract(address, _abi, runner) as unknown as GichoSwap;
  }
}
